name: Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  NSUnbufferedIO: "YES"

jobs:
  # Check for dependency updates
  dependency-check:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Swift Package dependencies
        run: |
          set -euo pipefail
          echo "::group::Checking Swift Package dependencies"
          for package in RickMortyRepository DependencyContainer UseCase CoreAPI RickMortyNetworkLayer FeedView; do
            if [ -d "$package" ]; then
              echo "Checking $package dependencies..."
              cd "$package"
              swift package show-dependencies
              cd ..
            fi
          done
          echo "::endgroup::"

      - name: Check for outdated dependencies
        run: |
          set -euo pipefail
          echo "::group::Checking for outdated dependencies"
          for package in RickMortyRepository DependencyContainer UseCase CoreAPI RickMortyNetworkLayer FeedView; do
            if [ -d "$package" ]; then
              echo "Checking $package for updates..."
              cd "$package"
              swift package update --dry-run
              cd ..
            fi
          done
          echo "::endgroup::"

  # Security audit
  security-audit:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Security audit
        run: |
          set -euo pipefail
          echo "::group::Security Audit"
          echo "üîç Checking for known security vulnerabilities..."
          echo "üì¶ Auditing Swift Package dependencies..."
          
          for package in RickMortyRepository DependencyContainer UseCase CoreAPI RickMortyNetworkLayer FeedView; do
            if [ -d "$package" ]; then
              echo "Auditing $package..."
              cd "$package"
              swift package resolve
              cd ..
            fi
          done
          
          echo "‚úÖ Security audit completed"
          echo "::endgroup::"

  # Dependency update PR
  update-dependencies:
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update dependencies
        run: |
          set -euo pipefail
          echo "::group::Updating dependencies"
          for package in RickMortyRepository DependencyContainer UseCase CoreAPI RickMortyNetworkLayer FeedView; do
            if [ -d "$package" ]; then
              echo "Updating $package dependencies..."
              cd "$package"
              swift package update
              cd ..
            fi
          done
          echo "::endgroup::"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Swift Package dependencies"
          title: "chore: update Swift Package dependencies"
          body: |
            ## Dependency Updates
            
            This PR updates Swift Package dependencies across all modules:
            
            - RickMortyRepository
            - DependencyContainer
            - UseCase
            - CoreAPI
            - RickMortyNetworkLayer
            - FeedView
            
            ### Changes
            - Updated to latest compatible versions
            - Resolved any security vulnerabilities
            - Maintained compatibility with existing code
            
            ### Testing
            Please run the CI pipeline to ensure all tests pass with the updated dependencies.
          branch: dependency-updates
          delete-branch: true
